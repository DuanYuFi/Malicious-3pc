Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
  8.52      3.97     3.97 200000000     0.00     0.00  long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&)
  8.15      7.77     3.80 800060000     0.00     0.00  avx_memzero(void*, unsigned long)
  5.41     10.29     2.52 201957573     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
  3.99     12.15     1.86 400000000     0.00     0.00  bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int)
  3.41     13.74     1.59 200000000     0.00     0.00  modp_<1>::convert_destroy(bigint&, Zp_Data const&)
  3.03     15.15     1.41 200000000     0.00     0.00  modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool)
  2.97     16.54     1.39 200000000     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<__mpz_struct> >, std::is_move_constructible<__mpz_struct>, std::is_move_assignable<__mpz_struct> >::value, void>::type std::swap<__mpz_struct>(__mpz_struct&, __mpz_struct&)
  2.75     17.82     1.28 400000000     0.00     0.00  __gmp_binary_equal::eval(__mpz_struct const*, long)
  2.51     18.99     1.17   647300     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand()
  2.49     20.15     1.16 1000000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const
  2.38     21.26     1.11 200010000     0.00     0.00  gfp_<0, 1>::gfp_(long)
  2.33     22.34     1.09 600000000     0.00     0.00  std::remove_reference<__mpz_struct&>::type&& std::move<__mpz_struct&>(__mpz_struct&)
  2.29     23.41     1.07 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const
  2.18     24.42     1.02 200000000     0.00     0.00  bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int)
  2.07     25.39     0.97 400000000     0.00     0.00  std::uniform_int_distribution<long long>::param_type::a() const
  1.80     26.23     0.84 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  1.75     27.04     0.82 400000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::get_mpz_t()
  1.75     27.86     0.82 200000002     0.00     0.00  bigint::~bigint()
  1.70     28.65     0.79 200000000     0.00     0.00  gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  1.67     29.43     0.78 500030000     0.00     0.00  modp_<1>::modp_()
  1.60     30.17     0.75 200000000     0.00     0.00  __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus>::__gmp_binary_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  1.57     30.90     0.73    20000     0.04     2.09  VectorPrime::set_random()
  1.56     31.63     0.73 200000000     0.00     0.00  inline_mpn_copyi(unsigned long*, unsigned long const*, long)
  1.56     32.35     0.73 200000000     0.00     0.00  bigint::operator=(long)
  1.54     33.07     0.72 200000000     0.00     0.00  bigint::bigint<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  1.54     33.79     0.72 200000000     0.00     0.00  long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&)
  1.53     34.51     0.72 200000000     0.00     0.00  std::uniform_int_distribution<long long>::param_type::b() const
  1.51     35.21     0.71 200000000     0.00     0.00  void __gmp_set_expr<__gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >(__mpz_struct*, __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> > const&)
  1.47     35.90     0.69 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  1.45     36.57     0.68 200000000     0.00     0.00  bigint::operator=(bigint&&)
  1.39     37.22     0.65 200000000     0.00     0.00  Zp_Data::Mont_Mult_variable(unsigned long*, unsigned long const*, unsigned long const*) const
  1.29     37.82     0.60 200000000     0.00     0.00  void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&)
  1.29     38.42     0.60 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::swap(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&)
  1.22     38.99     0.57 200000000     0.00     0.00  __gmp_binary_modulus::eval(__mpz_struct*, __mpz_struct const*, __mpz_struct const*)
  1.20     39.55     0.56 200000000     0.00     0.00  avx_memcpy(void*, void const*, unsigned long)
  1.19     40.11     0.56 100000000     0.00     0.00  void Zp_Data::Add<1>(unsigned long*, unsigned long const*, unsigned long const*) const
  1.18     40.66     0.55 200000000     0.00     0.00  inline_mpn_zero(unsigned long*, long)
  1.12     41.18     0.52 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&&)
  1.09     41.69     0.51 100000000     0.00     0.00  gfp_<0, 1>::add(gfp_<0, 1> const&, gfp_<0, 1> const&)
  1.03     42.17     0.48 100000000     0.00     0.00  void modp_<1>::mul<1>(modp_<1> const&, modp_<1> const&, Zp_Data const&)
  1.02     42.64     0.48 200000000     0.00     0.00  __gmp_binary_less::eval(__mpz_struct const*, long)
  0.91     43.07     0.43 200000000     0.00     0.00  Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const
  0.90     43.49     0.42 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&)
  0.88     43.90     0.41 200000000     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(long)
  0.77     44.26     0.36 100000000     0.00     0.00  gfp_<0, 1>::operator+=(gfp_<0, 1> const&)
  0.71     44.59     0.33 100000000     0.00     0.00  gfp_<0, 1>::mul(gfp_<0, 1> const&, gfp_<0, 1> const&)
  0.64     44.89     0.30    10000     0.03     0.45  VectorPrime::operator*(VectorPrime const&)
  0.58     45.16     0.27 100020000     0.00     0.00  gfp_<0, 1>::gfp_()
  0.47     45.38     0.22 200000005     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::~__gmp_expr()
  0.47     45.60     0.22 100000000     0.00     0.00  void Zp_Data::Mont_Mult_<1>(unsigned long*, unsigned long const*, unsigned long const*) const
  0.43     45.80     0.20 100030000     0.00     0.00  void assignZero<1>(modp_<1>&, Zp_Data const&)
  0.43     46.00     0.20 200000000     0.00     0.00  gfp_<0, 1>::gfp_(long long)
  0.43     46.20     0.20 100000000     0.00     0.00  gfp_<0, 1>::operator*(gfp_<0, 1> const&) const
  0.38     46.37     0.18 600000000     0.00     0.00  TLS wrapper function for bigint::tmp
  0.15     46.44     0.07                             __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr()
  0.08     46.48     0.04                             __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
  0.06     46.51     0.03                             std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.04     46.53     0.02 200000000     0.00     0.00  cpu_has_bmi2()
  0.04     46.55     0.02    10000     0.00     0.00  gfp_<0, 1>::assign_zero()
  0.04     46.57     0.02        1    20.00    20.00  std::uniform_int_distribution<long long>::param_type::param_type(long long, long long)
  0.04     46.59     0.02                             void assignOne<1>(modp_<1>&, Zp_Data const&)
  0.02     46.60     0.01    20000     0.00     0.00  gfp_<0, 1>::init_field(bigint const&, bool)
  0.02     46.61     0.01                             int128::int128()
  0.01     46.61     0.01                             std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00     46.61     0.00    40000     0.00     0.00  Zp_Data::get_t() const
  0.00     46.61     0.00    10000     0.00     0.00  gfp_<0, 1>::gfp_(int)
  0.00     46.61     0.00      312     0.00     0.00  std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long)
  0.00     46.61     0.00      312     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long)
  0.00     46.61     0.00      311     0.00     0.00  std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     46.61     0.00      311     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long)
  0.00     46.61     0.00        8     0.00     0.00  __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr()
  0.00     46.61     0.00        8     0.00     0.00  bigint::bigint()
  0.00     46.61     0.00        2     0.00     5.16  VectorPrime::VectorPrime()
  0.00     46.61     0.00        1     0.00    20.00  _GLOBAL__sub_I_RNG
  0.00     46.61     0.00        1     0.00    20.00  __static_initialization_and_destruction_0(int, int)
  0.00     46.61     0.00        1     0.00     0.00  IntBase<long>::IntBase(long)
  0.00     46.61     0.00        1     0.00     0.00  Integer::Integer(long)
  0.00     46.61     0.00        1     0.00     0.00  Zp_Data::Zp_Data()
  0.00     46.61     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long)
  0.00     46.61     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long)
  0.00     46.61     0.00        1     0.00    20.00  std::uniform_int_distribution<long long>::uniform_int_distribution(long long, long long)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.02% of 46.61 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.6    0.00   46.42                 main [1]
                0.73   41.15   20000/20000       VectorPrime::set_random() [2]
                0.30    4.23   10000/10000       VectorPrime::operator*(VectorPrime const&) [12]
                0.00    0.01       2/2           VectorPrime::VectorPrime() [67]
-----------------------------------------------
                0.73   41.15   20000/20000       main [1]
[2]     89.8    0.73   41.15   20000         VectorPrime::set_random() [2]
                0.20   30.89 200000000/200000000     gfp_<0, 1>::gfp_(long long) [3]
                0.72    9.34 200000000/200000000     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&) [8]
-----------------------------------------------
                0.20   30.89 200000000/200000000     VectorPrime::set_random() [2]
[3]     66.7    0.20   30.89 200000000         gfp_<0, 1>::gfp_(long long) [3]
                1.11   29.78 200000000/200010000     gfp_<0, 1>::gfp_(long) [4]
-----------------------------------------------
                0.00    0.00   10000/200010000     gfp_<0, 1>::gfp_(int) [71]
                1.11   29.78 200000000/200010000     gfp_<0, 1>::gfp_(long long) [3]
[4]     66.3    1.11   29.78 200010000         gfp_<0, 1>::gfp_(long) [4]
                0.79   26.52 200000000/200000000     gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [5]
                0.31    0.95 200010000/500030000     modp_<1>::modp_() [18]
                0.73    0.41 200000000/200000000     bigint::operator=(long) [34]
                0.06    0.00 200000000/600000000     TLS wrapper function for bigint::tmp [55]
                0.02    0.00   10000/10000       gfp_<0, 1>::assign_zero() [59]
-----------------------------------------------
                0.79   26.52 200000000/200000000     gfp_<0, 1>::gfp_(long) [4]
[5]     58.6    0.79   26.52 200000000         gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [5]
                0.60   24.65 200000000/200000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
                0.31    0.95 200000000/500030000     modp_<1>::modp_() [18]
-----------------------------------------------
                0.60   24.65 200000000/200000000     gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [5]
[6]     54.2    0.60   24.65 200000000         void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
                1.59   12.90 200000000/200000000     modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
                0.68    3.59 200000000/200000000     bigint::operator=(bigint&&) [13]
                1.86    1.74 400000000/400000000     bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [16]
                0.72    0.42 200000000/200000000     bigint::bigint<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [33]
                0.82    0.22 200000000/200000002     bigint::~bigint() [38]
                0.12    0.00 400000000/600000000     TLS wrapper function for bigint::tmp [55]
-----------------------------------------------
                1.59   12.90 200000000/200000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[7]     31.1    1.59   12.90 200000000         modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
                1.41    3.88 200000000/200000000     modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [10]
                0.84    4.23 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [11]
                1.02    0.71 200000000/200000000     bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [24]
                0.82    0.00 400000000/400000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::get_mpz_t() [41]
-----------------------------------------------
                0.72    9.34 200000000/200000000     VectorPrime::set_random() [2]
[8]     21.6    0.72    9.34 200000000         long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&) [8]
                3.97    5.37 200000000/200000000     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&) [9]
-----------------------------------------------
                3.97    5.37 200000000/200000000     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&) [8]
[9]     20.0    3.97    5.37 200000000         long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&) [9]
                2.52    1.17 201957573/201957573     std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [15]
                0.97    0.00 400000000/400000000     std::uniform_int_distribution<long long>::param_type::a() const [40]
                0.72    0.00 200000000/200000000     std::uniform_int_distribution<long long>::param_type::b() const [43]
-----------------------------------------------
                1.41    3.88 200000000/200000000     modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
[10]    11.3    1.41    3.88 200000000         modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [10]
                0.55    0.95 200000000/200000000     inline_mpn_zero(unsigned long*, long) [26]
                0.73    0.56 200000000/200000000     inline_mpn_copyi(unsigned long*, unsigned long const*, long) [29]
                0.43    0.67 200000000/200000000     Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const [35]
-----------------------------------------------
                0.84    4.23 200000000/200000000     modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
[11]    10.9    0.84    4.23 200000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [11]
                0.71    2.10 200000000/200000000     void __gmp_set_expr<__gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >(__mpz_struct*, __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> > const&) [21]
                0.69    0.75 200000000/200000000     __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [27]
-----------------------------------------------
                0.30    4.23   10000/10000       main [1]
[12]     9.7    0.30    4.23   10000         VectorPrime::operator*(VectorPrime const&) [12]
                0.20    2.61 100000000/100000000     gfp_<0, 1>::operator*(gfp_<0, 1> const&) const [20]
                0.36    1.07 100000000/100000000     gfp_<0, 1>::operator+=(gfp_<0, 1> const&) [28]
                0.00    0.00   10000/10000       gfp_<0, 1>::gfp_(int) [71]
-----------------------------------------------
                0.68    3.59 200000000/200000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[13]     9.2    0.68    3.59 200000000         bigint::operator=(bigint&&) [13]
                0.52    3.07 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&&) [17]
-----------------------------------------------
                0.48    0.00 100030000/800060000     void assignZero<1>(modp_<1>&, Zp_Data const&) [45]
                0.95    0.00 200000000/800060000     inline_mpn_zero(unsigned long*, long) [26]
                2.38    0.00 500030000/800060000     modp_<1>::modp_() [18]
[14]     8.2    3.80    0.00 800060000         avx_memzero(void*, unsigned long) [14]
-----------------------------------------------
                2.52    1.17 201957573/201957573     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&) [9]
[15]     7.9    2.52    1.17 201957573         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [15]
                1.17    0.00  647300/647300      std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand() [31]
-----------------------------------------------
                1.86    1.74 400000000/400000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[16]     7.7    1.86    1.74 400000000         bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [16]
                1.28    0.00 400000000/400000000     __gmp_binary_equal::eval(__mpz_struct const*, long) [30]
                0.46    0.00 400000000/1000000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const [32]
-----------------------------------------------
                0.52    3.07 200000000/200000000     bigint::operator=(bigint&&) [13]
[17]     7.7    0.52    3.07 200000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&&) [17]
                0.60    2.47 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::swap(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&) [19]
-----------------------------------------------
                0.16    0.48 100020000/500030000     gfp_<0, 1>::gfp_() [25]
                0.31    0.95 200000000/500030000     gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [5]
                0.31    0.95 200010000/500030000     gfp_<0, 1>::gfp_(long) [4]
[18]     6.8    0.78    2.38 500030000         modp_<1>::modp_() [18]
                2.38    0.00 500030000/800060000     avx_memzero(void*, unsigned long) [14]
-----------------------------------------------
                0.60    2.47 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&&) [17]
[19]     6.6    0.60    2.47 200000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::swap(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&) [19]
                1.39    1.09 200000000/200000000     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<__mpz_struct> >, std::is_move_constructible<__mpz_struct>, std::is_move_assignable<__mpz_struct> >::value, void>::type std::swap<__mpz_struct>(__mpz_struct&, __mpz_struct&) [22]
-----------------------------------------------
                0.20    2.61 100000000/100000000     VectorPrime::operator*(VectorPrime const&) [12]
[20]     6.0    0.20    2.61 100000000         gfp_<0, 1>::operator*(gfp_<0, 1> const&) const [20]
                0.27    1.31 100000000/100020000     gfp_<0, 1>::gfp_() [25]
                0.33    0.70 100000000/100000000     gfp_<0, 1>::mul(gfp_<0, 1> const&, gfp_<0, 1> const&) [39]
-----------------------------------------------
                0.71    2.10 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [11]
[21]     6.0    0.71    2.10 200000000         void __gmp_set_expr<__gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >(__mpz_struct*, __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> > const&) [21]
                1.07    1.03 200000000/200000000     __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const [23]
-----------------------------------------------
                1.39    1.09 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::swap(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&) [19]
[22]     5.3    1.39    1.09 200000000         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<__mpz_struct> >, std::is_move_constructible<__mpz_struct>, std::is_move_assignable<__mpz_struct> >::value, void>::type std::swap<__mpz_struct>(__mpz_struct&, __mpz_struct&) [22]
                1.09    0.00 600000000/600000000     std::remove_reference<__mpz_struct&>::type&& std::move<__mpz_struct&>(__mpz_struct&) [36]
-----------------------------------------------
                1.07    1.03 200000000/200000000     void __gmp_set_expr<__gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >(__mpz_struct*, __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> > const&) [21]
[23]     4.5    1.07    1.03 200000000         __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const [23]
                0.57    0.00 200000000/200000000     __gmp_binary_modulus::eval(__mpz_struct*, __mpz_struct const*, __mpz_struct const*) [47]
                0.46    0.00 400000000/1000000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const [32]
-----------------------------------------------
                1.02    0.71 200000000/200000000     modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
[24]     3.7    1.02    0.71 200000000         bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [24]
                0.48    0.00 200000000/200000000     __gmp_binary_less::eval(__mpz_struct const*, long) [50]
                0.23    0.00 200000000/1000000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const [32]
-----------------------------------------------
                0.00    0.00   20000/100020000     VectorPrime::VectorPrime() [67]
                0.27    1.31 100000000/100020000     gfp_<0, 1>::operator*(gfp_<0, 1> const&) const [20]
[25]     3.4    0.27    1.31 100020000         gfp_<0, 1>::gfp_() [25]
                0.20    0.48 100020000/100030000     void assignZero<1>(modp_<1>&, Zp_Data const&) [45]
                0.16    0.48 100020000/500030000     modp_<1>::modp_() [18]
-----------------------------------------------
                0.55    0.95 200000000/200000000     modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [10]
[26]     3.2    0.55    0.95 200000000         inline_mpn_zero(unsigned long*, long) [26]
                0.95    0.00 200000000/800060000     avx_memzero(void*, unsigned long) [14]
-----------------------------------------------
                0.69    0.75 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [11]
[27]     3.1    0.69    0.75 200000000         __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [27]
                0.75    0.00 200000000/200000000     __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus>::__gmp_binary_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [42]
-----------------------------------------------
                0.36    1.07 100000000/100000000     VectorPrime::operator*(VectorPrime const&) [12]
[28]     3.1    0.36    1.07 100000000         gfp_<0, 1>::operator+=(gfp_<0, 1> const&) [28]
                0.51    0.56 100000000/100000000     gfp_<0, 1>::add(gfp_<0, 1> const&, gfp_<0, 1> const&) [37]
-----------------------------------------------
                0.73    0.56 200000000/200000000     modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [10]
[29]     2.8    0.73    0.56 200000000         inline_mpn_copyi(unsigned long*, unsigned long const*, long) [29]
                0.56    0.00 200000000/200000000     avx_memcpy(void*, void const*, unsigned long) [48]
-----------------------------------------------
                1.28    0.00 400000000/400000000     bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [16]
[30]     2.7    1.28    0.00 400000000         __gmp_binary_equal::eval(__mpz_struct const*, long) [30]
-----------------------------------------------
                1.17    0.00  647300/647300      std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [15]
[31]     2.5    1.17    0.00  647300         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand() [31]
-----------------------------------------------
                0.23    0.00 200000000/1000000000     bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [24]
                0.46    0.00 400000000/1000000000     bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [16]
                0.46    0.00 400000000/1000000000     __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const [23]
[32]     2.5    1.16    0.00 1000000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const [32]
-----------------------------------------------
                0.72    0.42 200000000/200000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[33]     2.4    0.72    0.42 200000000         bigint::bigint<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [33]
                0.42    0.00 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [51]
-----------------------------------------------
                0.73    0.41 200000000/200000000     gfp_<0, 1>::gfp_(long) [4]
[34]     2.4    0.73    0.41 200000000         bigint::operator=(long) [34]
                0.41    0.00 200000000/200000000     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(long) [52]
-----------------------------------------------
                0.43    0.67 200000000/200000000     modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [10]
[35]     2.3    0.43    0.67 200000000         Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const [35]
                0.65    0.00 200000000/200000000     Zp_Data::Mont_Mult_variable(unsigned long*, unsigned long const*, unsigned long const*) const [46]
                0.02    0.00 200000000/200000000     cpu_has_bmi2() [60]
-----------------------------------------------
                1.09    0.00 600000000/600000000     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<__mpz_struct> >, std::is_move_constructible<__mpz_struct>, std::is_move_assignable<__mpz_struct> >::value, void>::type std::swap<__mpz_struct>(__mpz_struct&, __mpz_struct&) [22]
[36]     2.3    1.09    0.00 600000000         std::remove_reference<__mpz_struct&>::type&& std::move<__mpz_struct&>(__mpz_struct&) [36]
-----------------------------------------------
                0.51    0.56 100000000/100000000     gfp_<0, 1>::operator+=(gfp_<0, 1> const&) [28]
[37]     2.3    0.51    0.56 100000000         gfp_<0, 1>::add(gfp_<0, 1> const&, gfp_<0, 1> const&) [37]
                0.56    0.00 100000000/100000000     void Zp_Data::Add<1>(unsigned long*, unsigned long const*, unsigned long const*) const [49]
-----------------------------------------------
                0.00    0.00       2/200000002     Zp_Data::~Zp_Data() [72]
                0.82    0.22 200000000/200000002     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[38]     2.2    0.82    0.22 200000002         bigint::~bigint() [38]
                0.22    0.00 200000005/200000005     __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::~__gmp_expr() [53]
-----------------------------------------------
                0.33    0.70 100000000/100000000     gfp_<0, 1>::operator*(gfp_<0, 1> const&) const [20]
[39]     2.2    0.33    0.70 100000000         gfp_<0, 1>::mul(gfp_<0, 1> const&, gfp_<0, 1> const&) [39]
                0.48    0.22 100000000/100000000     void modp_<1>::mul<1>(modp_<1> const&, modp_<1> const&, Zp_Data const&) [44]
-----------------------------------------------
                0.97    0.00 400000000/400000000     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&) [9]
[40]     2.1    0.97    0.00 400000000         std::uniform_int_distribution<long long>::param_type::a() const [40]
-----------------------------------------------
                0.82    0.00 400000000/400000000     modp_<1>::convert_destroy(bigint&, Zp_Data const&) [7]
[41]     1.7    0.82    0.00 400000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::get_mpz_t() [41]
-----------------------------------------------
                0.75    0.00 200000000/200000000     __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [27]
[42]     1.6    0.75    0.00 200000000         __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus>::__gmp_binary_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [42]
-----------------------------------------------
                0.72    0.00 200000000/200000000     long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&) [9]
[43]     1.5    0.72    0.00 200000000         std::uniform_int_distribution<long long>::param_type::b() const [43]
-----------------------------------------------
                0.48    0.22 100000000/100000000     gfp_<0, 1>::mul(gfp_<0, 1> const&, gfp_<0, 1> const&) [39]
[44]     1.5    0.48    0.22 100000000         void modp_<1>::mul<1>(modp_<1> const&, modp_<1> const&, Zp_Data const&) [44]
                0.22    0.00 100000000/100000000     void Zp_Data::Mont_Mult_<1>(unsigned long*, unsigned long const*, unsigned long const*) const [54]
-----------------------------------------------
                0.00    0.00   10000/100030000     gfp_<0, 1>::assign_zero() [59]
                0.20    0.48 100020000/100030000     gfp_<0, 1>::gfp_() [25]
[45]     1.4    0.20    0.48 100030000         void assignZero<1>(modp_<1>&, Zp_Data const&) [45]
                0.48    0.00 100030000/800060000     avx_memzero(void*, unsigned long) [14]
-----------------------------------------------
                0.65    0.00 200000000/200000000     Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const [35]
[46]     1.4    0.65    0.00 200000000         Zp_Data::Mont_Mult_variable(unsigned long*, unsigned long const*, unsigned long const*) const [46]
-----------------------------------------------
                0.57    0.00 200000000/200000000     __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const [23]
[47]     1.2    0.57    0.00 200000000         __gmp_binary_modulus::eval(__mpz_struct*, __mpz_struct const*, __mpz_struct const*) [47]
-----------------------------------------------
                0.56    0.00 200000000/200000000     inline_mpn_copyi(unsigned long*, unsigned long const*, long) [29]
[48]     1.2    0.56    0.00 200000000         avx_memcpy(void*, void const*, unsigned long) [48]
-----------------------------------------------
                0.56    0.00 100000000/100000000     gfp_<0, 1>::add(gfp_<0, 1> const&, gfp_<0, 1> const&) [37]
[49]     1.2    0.56    0.00 100000000         void Zp_Data::Add<1>(unsigned long*, unsigned long const*, unsigned long const*) const [49]
-----------------------------------------------
                0.48    0.00 200000000/200000000     bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int) [24]
[50]     1.0    0.48    0.00 200000000         __gmp_binary_less::eval(__mpz_struct const*, long) [50]
-----------------------------------------------
                0.42    0.00 200000000/200000000     bigint::bigint<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [33]
[51]     0.9    0.42    0.00 200000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [51]
-----------------------------------------------
                0.41    0.00 200000000/200000000     bigint::operator=(long) [34]
[52]     0.9    0.41    0.00 200000000         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(long) [52]
-----------------------------------------------
                0.22    0.00 200000005/200000005     bigint::~bigint() [38]
[53]     0.5    0.22    0.00 200000005         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::~__gmp_expr() [53]
-----------------------------------------------
                0.22    0.00 100000000/100000000     void modp_<1>::mul<1>(modp_<1> const&, modp_<1> const&, Zp_Data const&) [44]
[54]     0.5    0.22    0.00 100000000         void Zp_Data::Mont_Mult_<1>(unsigned long*, unsigned long const*, unsigned long const*) const [54]
-----------------------------------------------
                0.06    0.00 200000000/600000000     gfp_<0, 1>::gfp_(long) [4]
                0.12    0.00 400000000/600000000     void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [6]
[55]     0.4    0.18    0.00 600000000         TLS wrapper function for bigint::tmp [55]
-----------------------------------------------
                                                 <spontaneous>
[56]     0.2    0.07    0.00                 __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [56]
-----------------------------------------------
                                                 <spontaneous>
[57]     0.1    0.04    0.00                 __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [57]
-----------------------------------------------
                                                 <spontaneous>
[58]     0.1    0.03    0.00                 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [58]
-----------------------------------------------
                0.02    0.00   10000/10000       gfp_<0, 1>::gfp_(long) [4]
[59]     0.0    0.02    0.00   10000         gfp_<0, 1>::assign_zero() [59]
                0.00    0.00   10000/100030000     void assignZero<1>(modp_<1>&, Zp_Data const&) [45]
-----------------------------------------------
                0.02    0.00 200000000/200000000     Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const [35]
[60]     0.0    0.02    0.00 200000000         cpu_has_bmi2() [60]
-----------------------------------------------
                0.00    0.02       1/1           __libc_csu_init [66]
[61]     0.0    0.00    0.02       1         _GLOBAL__sub_I_RNG [61]
                0.00    0.02       1/1           __static_initialization_and_destruction_0(int, int) [62]
-----------------------------------------------
                0.00    0.02       1/1           _GLOBAL__sub_I_RNG [61]
[62]     0.0    0.00    0.02       1         __static_initialization_and_destruction_0(int, int) [62]
                0.00    0.02       1/1           std::uniform_int_distribution<long long>::uniform_int_distribution(long long, long long) [64]
                0.00    0.00       1/1           Integer::Integer(long) [87]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [90]
                0.00    0.00       1/1           Zp_Data::Zp_Data() [88]
-----------------------------------------------
                0.02    0.00       1/1           std::uniform_int_distribution<long long>::uniform_int_distribution(long long, long long) [64]
[63]     0.0    0.02    0.00       1         std::uniform_int_distribution<long long>::param_type::param_type(long long, long long) [63]
-----------------------------------------------
                0.00    0.02       1/1           __static_initialization_and_destruction_0(int, int) [62]
[64]     0.0    0.00    0.02       1         std::uniform_int_distribution<long long>::uniform_int_distribution(long long, long long) [64]
                0.02    0.00       1/1           std::uniform_int_distribution<long long>::param_type::param_type(long long, long long) [63]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.0    0.02    0.00                 void assignOne<1>(modp_<1>&, Zp_Data const&) [65]
-----------------------------------------------
                                                 <spontaneous>
[66]     0.0    0.00    0.02                 __libc_csu_init [66]
                0.00    0.02       1/1           _GLOBAL__sub_I_RNG [61]
-----------------------------------------------
                0.00    0.01       2/2           main [1]
[67]     0.0    0.00    0.01       2         VectorPrime::VectorPrime() [67]
                0.01    0.00   20000/20000       gfp_<0, 1>::init_field(bigint const&, bool) [68]
                0.00    0.00   20000/100020000     gfp_<0, 1>::gfp_() [25]
-----------------------------------------------
                0.01    0.00   20000/20000       VectorPrime::VectorPrime() [67]
[68]     0.0    0.01    0.00   20000         gfp_<0, 1>::init_field(bigint const&, bool) [68]
                0.00    0.00   40000/40000       Zp_Data::get_t() const [79]
-----------------------------------------------
                                                 <spontaneous>
[69]     0.0    0.01    0.00                 int128::int128() [69]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.0    0.01    0.00                 std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [70]
-----------------------------------------------
                0.00    0.00   10000/10000       VectorPrime::operator*(VectorPrime const&) [12]
[71]     0.0    0.00    0.00   10000         gfp_<0, 1>::gfp_(int) [71]
                0.00    0.00   10000/200010000     gfp_<0, 1>::gfp_(long) [4]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.0    0.00    0.00                 Zp_Data::~Zp_Data() [72]
                0.00    0.00       2/200000002     bigint::~bigint() [38]
-----------------------------------------------
                0.00    0.00   40000/40000       gfp_<0, 1>::init_field(bigint const&, bool) [68]
[79]     0.0    0.00    0.00   40000         Zp_Data::get_t() const [79]
-----------------------------------------------
                0.00    0.00     312/312         unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long) [81]
[80]     0.0    0.00    0.00     312         std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long) [80]
-----------------------------------------------
                0.00    0.00     312/312         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [89]
[81]     0.0    0.00    0.00     312         unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long) [81]
                0.00    0.00     312/312         std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long) [80]
-----------------------------------------------
                0.00    0.00     311/311         unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long) [83]
[82]     0.0    0.00    0.00     311         std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long) [82]
-----------------------------------------------
                0.00    0.00     311/311         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [89]
[83]     0.0    0.00    0.00     311         unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long) [83]
                0.00    0.00     311/311         std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long) [82]
-----------------------------------------------
                0.00    0.00       8/8           bigint::bigint() [85]
[84]     0.0    0.00    0.00       8         __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr() [84]
-----------------------------------------------
                0.00    0.00       8/8           Zp_Data::Zp_Data() [88]
[85]     0.0    0.00    0.00       8         bigint::bigint() [85]
                0.00    0.00       8/8           __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr() [84]
-----------------------------------------------
                0.00    0.00       1/1           Integer::Integer(long) [87]
[86]     0.0    0.00    0.00       1         IntBase<long>::IntBase(long) [86]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [62]
[87]     0.0    0.00    0.00       1         Integer::Integer(long) [87]
                0.00    0.00       1/1           IntBase<long>::IntBase(long) [86]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [62]
[88]     0.0    0.00    0.00       1         Zp_Data::Zp_Data() [88]
                0.00    0.00       8/8           bigint::bigint() [85]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [90]
[89]     0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [89]
                0.00    0.00     312/312         unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long) [81]
                0.00    0.00     311/311         unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long) [83]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [62]
[90]     0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [90]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [89]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [61] _GLOBAL__sub_I_RNG     [68] gfp_<0, 1>::init_field(bigint const&, bool) [20] gfp_<0, 1>::operator*(gfp_<0, 1> const&) const
  [45] void assignZero<1>(modp_<1>&, Zp_Data const&) [59] gfp_<0, 1>::assign_zero() [54] void Zp_Data::Mont_Mult_<1>(unsigned long*, unsigned long const*, unsigned long const*) const
  [48] avx_memcpy(void*, void const*, unsigned long) [37] gfp_<0, 1>::add(gfp_<0, 1> const&, gfp_<0, 1> const&) [46] Zp_Data::Mont_Mult_variable(unsigned long*, unsigned long const*, unsigned long const*) const
  [14] avx_memzero(void*, unsigned long) [39] gfp_<0, 1>::mul(gfp_<0, 1> const&, gfp_<0, 1> const&) [49] void Zp_Data::Add<1>(unsigned long*, unsigned long const*, unsigned long const*) const
  [60] cpu_has_bmi2()          [5] gfp_<0, 1>::gfp_(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [79] Zp_Data::get_t() const
  [21] void __gmp_set_expr<__gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >(__mpz_struct*, __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> > const&) [71] gfp_<0, 1>::gfp_(int) [35] Zp_Data::Mont_Mult(unsigned long*, unsigned long const*, unsigned long const*) const
  [26] inline_mpn_zero(unsigned long*, long) [25] gfp_<0, 1>::gfp_() [40] std::uniform_int_distribution<long long>::param_type::a() const
  [29] inline_mpn_copyi(unsigned long*, unsigned long const*, long) [4] gfp_<0, 1>::gfp_(long) [43] std::uniform_int_distribution<long long>::param_type::b() const
  [62] __static_initialization_and_destruction_0(int, int) [3] gfp_<0, 1>::gfp_(long long) [31] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand()
   [6] void to_modp<1>(modp_<1>&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, Zp_Data const&) [28] gfp_<0, 1>::operator+=(gfp_<0, 1> const&) [89] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long)
  [65] void assignOne<1>(modp_<1>&, Zp_Data const&) [7] modp_<1>::convert_destroy(bigint&, Zp_Data const&) [90] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long)
  [27] __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [44] void modp_<1>::mul<1>(modp_<1> const&, modp_<1> const&, Zp_Data const&) [15] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
  [19] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::swap(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&) [10] modp_<1>::convert(unsigned long const*, long, Zp_Data const&, bool) [63] std::uniform_int_distribution<long long>::param_type::param_type(long long, long long)
  [41] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::get_mpz_t() [18] modp_<1>::modp_() [64] std::uniform_int_distribution<long long>::uniform_int_distribution(long long, long long)
  [51] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [33] bigint::bigint<__gmp_expr<__mpz_struct [1], __mpz_struct [1]> >(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [8] long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&)
  [84] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__gmp_expr() [85] bigint::bigint() [9] long long std::uniform_int_distribution<long long>::operator()<std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul> >(std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>&, std::uniform_int_distribution<long long>::param_type const&)
  [53] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::~__gmp_expr() [38] bigint::~bigint() [58] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  [17] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(__gmp_expr<__mpz_struct [1], __mpz_struct [1]>&&) [13] bigint::operator=(bigint&&) [80] std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long)
  [52] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator=(long) [34] bigint::operator=(long) [82] std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  [11] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>& __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::operator%=<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [69] int128::int128() [81] unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long)
   [2] VectorPrime::set_random() [86] IntBase<long>::IntBase(long) [83] unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long)
  [67] VectorPrime::VectorPrime() [87] Integer::Integer(long) [36] std::remove_reference<__mpz_struct&>::type&& std::move<__mpz_struct&>(__mpz_struct&)
  [12] VectorPrime::operator*(VectorPrime const&) [88] Zp_Data::Zp_Data() [22] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<__mpz_struct> >, std::is_move_constructible<__mpz_struct>, std::is_move_assignable<__mpz_struct> >::value, void>::type std::swap<__mpz_struct>(__mpz_struct&, __mpz_struct&)
  [42] __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus>::__gmp_binary_expr(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, __gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&) [56] __gnu_cxx::__aligned_membuf<unsigned long>::_M_addr() [70] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  [50] __gmp_binary_less::eval(__mpz_struct const*, long) [57] __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::difference_type __gnu_cxx::operator-<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [55] TLS wrapper function for bigint::tmp
  [30] __gmp_binary_equal::eval(__mpz_struct const*, long) [23] __gmp_expr<__mpz_struct [1], __gmp_binary_expr<__gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_expr<__mpz_struct [1], __mpz_struct [1]>, __gmp_binary_modulus> >::eval(__mpz_struct*) const [16] bool operator==<__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int)
  [47] __gmp_binary_modulus::eval(__mpz_struct*, __mpz_struct const*, __mpz_struct const*) [32] __gmp_expr<__mpz_struct [1], __mpz_struct [1]>::__get_mp() const [24] bool operator< <__mpz_struct [1], __mpz_struct [1]>(__gmp_expr<__mpz_struct [1], __mpz_struct [1]> const&, int)
